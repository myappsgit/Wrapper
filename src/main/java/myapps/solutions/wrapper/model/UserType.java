package myapps.solutions.wrapper.model;
// Generated Sep 27, 2017 1:50:38 PM by Hibernate Tools 5.2.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * UserType generated by hbm2java
 */
@Entity
@Table(name = "user_type", catalog = "wrapper")
public class UserType implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4702069569702856258L;
	private Integer id;
	private Product product;
	private String type;
	private List<UserSubscription> userSubscriptions = new ArrayList<UserSubscription>(0);
	private List<TermsConditions> termsConditionses = new ArrayList<TermsConditions>(0);

	public UserType() {
	}

	public UserType(Product product, String type) {
		this.product = product;
		this.type = type;
	}

	public UserType(Product product, String type, List<UserSubscription> userSubscriptions,
			List<TermsConditions> termsConditionses) {
		this.product = product;
		this.type = type;
		this.userSubscriptions = userSubscriptions;
		this.termsConditionses = termsConditionses;
	}

	public UserType(int id) {
		this.id = id;
	}

	public UserType(String type) {
		this.type = type;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@JsonProperty(access = Access.WRITE_ONLY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "productId", nullable = false)
	@JsonIgnore
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	@Column(name = "type", nullable = false, length = 45)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userType")
	@JsonIgnore
	public List<UserSubscription> getUserSubscriptions() {
		return this.userSubscriptions;
	}

	public void setUserSubscriptions(List<UserSubscription> userSubscriptions) {
		this.userSubscriptions = userSubscriptions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userType")
	@JsonIgnore
	public List<TermsConditions> getTermsConditionses() {
		return this.termsConditionses;
	}

	public void setTermsConditionses(List<TermsConditions> termsConditionses) {
		this.termsConditionses = termsConditionses;
	}
}
