package myapps.solutions.wrapper.model;
// Generated Apr 20, 2017 3:00:30 PM by Hibernate Tools 5.2.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.ColumnResult;
import javax.persistence.ConstructorResult;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SqlResultSetMapping;
import javax.persistence.SqlResultSetMappings;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.Past;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import myapps.solutions.wrapper.utils.UserDetailsValidation;

/**
 * UserDetails generated by hbm2java
 */

@SqlResultSetMappings({ @SqlResultSetMapping(name = "sync_details", classes = {
		@ConstructorResult(targetClass = SyncDetails.class, columns = { @ColumnResult(name = "tcps"),
				@ColumnResult(name = "appVersion"), @ColumnResult(name = "offers"), @ColumnResult(name = "messages"),
				@ColumnResult(name = "name") }) }),

		@SqlResultSetMapping(name = "user_search_details", classes = {
				@ConstructorResult(targetClass = UserSearchResult.class, columns = { @ColumnResult(name = "id"),
						@ColumnResult(name = "userName"), @ColumnResult(name = "displayName"),
						@ColumnResult(name = "emailId"), @ColumnResult(name = "mobileNo"),
						@ColumnResult(name = "isActive") }) }) })
@Entity
@UserDetailsValidation
@Table(name = "user_details", catalog = "wrapper", uniqueConstraints = { @UniqueConstraint(columnNames = "emailId"),
		@UniqueConstraint(columnNames = "userName") })
public class UserDetails implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3282306745858989419L;
	private Integer id;
	private String firstName;
	private String lastName;
	private String addressingName;
	private String userName;
	private String emailId;
	private String gender;
	@Past
	private Date dob;
	private Integer age;
	private String mobileNo;
	private String address;
	private String city;
	private String country;
	private String pincode;
	private String website;
	private int isActive;
	private Date signedUp;
	private Authorization authorization;
	private List<TermsConditionsHistory> termsConditionsHistories = new ArrayList<TermsConditionsHistory>(0);
	private Photo photo;
	private Wallet wallet;
	private List<UserSubscription> userSubscriptions = new ArrayList<UserSubscription>(0);
	private Tokens tokens;
	private List<AccountDevice> accountDevices = new ArrayList<AccountDevice>(0);
	private AccountNotification accountNotification;
	private boolean fromGoogle;
	private String product;
	private String userType;

	public UserDetails() {
	}

	public UserDetails(String userName, String mobileNo, String emailId, int isActive) {
		this.userName = userName;
		this.mobileNo = mobileNo;
		this.emailId = emailId;
		this.isActive = isActive;
	}

	public UserDetails(String userName, String emailId, int isActive) {
		this.userName = userName;
		this.emailId = emailId;
		this.isActive = isActive;
	}

	public UserDetails(String userName, Authorization authorization, String emailId, String mobileNo, Date dob,
			String gender, String city, List<AccountDevice> accountDevices, int isActive,
			List<TermsConditionsHistory> termsConditionsHistories) {
		this.userName = userName;
		this.authorization = authorization;
		this.emailId = emailId;
		this.mobileNo = mobileNo;
		this.dob = dob;
		this.gender = gender;
		this.city = city;
		this.accountDevices = accountDevices;
		this.isActive = isActive;
		this.termsConditionsHistories = termsConditionsHistories;
	}

	public UserDetails(String firstName, String emailId, String gender, Date dob, String city, int isActive) {
		this.firstName = firstName;
		this.emailId = emailId;
		this.gender = gender;
		this.dob = dob;
		this.city = city;
		this.isActive = isActive;
	}

	public UserDetails(String firstName, String lastName, String addressingName, String userName, String emailId,
			String gender, Date dob, int age, String mobileNo, String address, String city, String country,
			String pincode, String website, int isActive, Date signedUp, Authorization authorization,
			List<TermsConditionsHistory> termsConditionsHistories, Photo photo, Wallet wallet,
			List<UserSubscription> userSubscriptions, List<AccountDevice> accountDevices,
			AccountNotification accountNotification) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.addressingName = addressingName;
		this.userName = userName;
		this.emailId = emailId;
		this.gender = gender;
		this.dob = dob;
		this.age = age;
		this.mobileNo = mobileNo;
		this.address = address;
		this.city = city;
		this.country = country;
		this.pincode = pincode;
		this.website = website;
		this.isActive = isActive;
		this.signedUp = signedUp;
		this.authorization = authorization;
		this.termsConditionsHistories = termsConditionsHistories;
		this.photo = photo;
		this.wallet = wallet;
		this.userSubscriptions = userSubscriptions;
		this.accountDevices = accountDevices;
		this.accountNotification = accountNotification;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "firstName", length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "lastName", length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "addressingName", nullable = false, length = 45)
	public String getAddressingName() {
		return this.addressingName;
	}

	public void setAddressingName(String addressingName) {
		this.addressingName = addressingName;
	}

	@Column(name = "userName", unique = true, nullable = false, length = 45)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "emailId", unique = true, nullable = false, length = 45)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "gender", length = 1)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dob", length = 10)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "age", length = 255)
	public Integer getAge() {
		return this.age;
	}

	public void setAge(Integer age) {
		this.age = age;
	}

	@Column(name = "mobileNo", length = 45)
	public String getMobileNo() {
		return this.mobileNo;
	}

	public void setMobileNo(String mobileNo) {
		this.mobileNo = mobileNo;
	}

	@Column(name = "address", length = 65535)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "city", length = 45)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "country", length = 45)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "pincode", length = 45)
	public String getPincode() {
		return this.pincode;
	}

	public void setPincode(String pincode) {
		this.pincode = pincode;
	}

	@Column(name = "website", length = 128)
	public String getWebsite() {
		return this.website;
	}

	public void setWebsite(String website) {
		this.website = website;
	}

	@Column(name = "isActive", nullable = false)
	public int getIsActive() {
		return this.isActive;
	}

	public void setIsActive(int isActive) {
		this.isActive = isActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "signedUp", nullable = false, length = 19)
	@JsonIgnore
	public Date getSignedUp() {
		return this.signedUp;
	}

	public void setSignedUp(Date signedUp) {
		this.signedUp = signedUp;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "userDetails", cascade = CascadeType.ALL)
	@JsonIgnore
	public Authorization getAuthorization() {
		return this.authorization;
	}

	@JsonDeserialize
	public void setAuthorization(Authorization authorization) {
		this.authorization = authorization;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "userDetails", cascade = CascadeType.ALL)
	public List<TermsConditionsHistory> getTermsConditionsHistories() {
		return this.termsConditionsHistories;
	}

	@JsonDeserialize
	public void setTermsConditionsHistories(List<TermsConditionsHistory> termsConditionsHistories) {
		this.termsConditionsHistories = termsConditionsHistories;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "userDetails", cascade = CascadeType.ALL)
	public Photo getPhoto() {
		return this.photo;
	}

	public void setPhoto(Photo photo) {
		this.photo = photo;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "userDetails", cascade = CascadeType.ALL)
	public Wallet getWallet() {
		return this.wallet;
	}

	public void setWallet(Wallet wallet) {
		this.wallet = wallet;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "userDetails", cascade = CascadeType.ALL)
	public List<UserSubscription> getUserSubscriptions() {
		return this.userSubscriptions;
	}

	public void setUserSubscriptions(List<UserSubscription> userSubscriptions) {
		this.userSubscriptions = userSubscriptions;
	}

	@OneToOne(fetch = FetchType.EAGER, mappedBy = "userDetails", cascade = CascadeType.ALL)
	public Tokens getTokens() {
		return this.tokens;
	}

	public void setTokens(Tokens tokens) {
		this.tokens = tokens;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "userDetails", cascade = CascadeType.ALL)
	public List<AccountDevice> getAccountDevices() {
		return this.accountDevices;
	}

	@JsonDeserialize
	public void setAccountDevices(List<AccountDevice> accountDevices) {
		this.accountDevices = accountDevices;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "userDetails", cascade = CascadeType.ALL)
	public AccountNotification getAccountNotification() {
		return this.accountNotification;
	}

	@JsonDeserialize
	public void setAccountNotification(AccountNotification accountNotification) {
		this.accountNotification = accountNotification;
	}

	@Transient
	@JsonIgnore
	public boolean isFromGoogle() {
		return fromGoogle;
	}

	public void setFromGoogle(boolean fromGoogle) {
		this.fromGoogle = fromGoogle;
	}

	@Transient
	@JsonProperty(access = Access.WRITE_ONLY)
	public String getProduct() {
		return product;
	}

	public void setProduct(String product) {
		this.product = product;
	}

	@Transient
	@JsonProperty(access = Access.WRITE_ONLY)
	public String getUserType() {
		return userType;
	}

	public void setUserType(String userType) {
		this.userType = userType;
	}

}
